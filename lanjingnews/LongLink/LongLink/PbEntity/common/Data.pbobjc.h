// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/data.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class AudioMeta;
@class ImageMeta;
@class PushExtra;
@class TextMeta;
@class User;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum IMMessageType

typedef GPB_ENUM(IMMessageType) {
  IMMessageType_Text = 1,
  IMMessageType_Image = 2,
  IMMessageType_Audio = 3,
};

GPBEnumDescriptor *IMMessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL IMMessageType_IsValidValue(int32_t value);

#pragma mark - Enum ChannelType

/** app需要用长连接的频道，不同的频道有不同的消息格式，暂时先支持会议系统，用IMMessage消息格式. 后续可以支持推送，私信等频道 */
typedef GPB_ENUM(ChannelType) {
  /** 上方主会场 */
  ChannelType_MeetingMain = 1,

  /** 下方讨论区 */
  ChannelType_MeetingDiscuss = 2,

  /** 音频转换成文字 */
  ChannelType_MettingTrans = 3,

  /** 在线状态更改消息 */
  ChannelType_MettingStatus = 4,

  /** 角色变更消息 */
  ChannelType_MettingRole = 5,

  /** 退出会议(通知用户其它设备退出会议) */
  ChannelType_MeetingQuit = 6,

  /** 快讯有新消息 */
  ChannelType_RollNews = 7,

  /** 推送消息 */
  ChannelType_Push = 8,
};

GPBEnumDescriptor *ChannelType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChannelType_IsValidValue(int32_t value);

#pragma mark - DataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface DataRoot : GPBRootObject
@end

#pragma mark - TextMeta

typedef GPB_ENUM(TextMeta_FieldNumber) {
  TextMeta_FieldNumber_Content = 1,
};

@interface TextMeta : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@end

#pragma mark - ImageMeta

typedef GPB_ENUM(ImageMeta_FieldNumber) {
  ImageMeta_FieldNumber_URL = 1,
  ImageMeta_FieldNumber_Height = 2,
  ImageMeta_FieldNumber_Width = 3,
};

@interface ImageMeta : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite) int32_t height;

@property(nonatomic, readwrite) BOOL hasHeight;
@property(nonatomic, readwrite) int32_t width;

@property(nonatomic, readwrite) BOOL hasWidth;
@end

#pragma mark - AudioMeta

typedef GPB_ENUM(AudioMeta_FieldNumber) {
  AudioMeta_FieldNumber_URL = 1,
  AudioMeta_FieldNumber_Format = 2,
  AudioMeta_FieldNumber_Duration = 3,
};

@interface AudioMeta : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

/** 音频格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *format;
/** Test to see if @c format has been set. */
@property(nonatomic, readwrite) BOOL hasFormat;

/** 音频时长，单位s */
@property(nonatomic, readwrite) int32_t duration;

@property(nonatomic, readwrite) BOOL hasDuration;
@end

#pragma mark - User

typedef GPB_ENUM(User_FieldNumber) {
  User_FieldNumber_Uid = 1,
  User_FieldNumber_Sname = 2,
  User_FieldNumber_Avatar = 3,
  User_FieldNumber_Role = 4,
  User_FieldNumber_Company = 5,
  User_FieldNumber_CompanyJob = 6,
};

@interface User : GPBMessage

@property(nonatomic, readwrite) int32_t uid;

@property(nonatomic, readwrite) BOOL hasUid;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sname;
/** Test to see if @c sname has been set. */
@property(nonatomic, readwrite) BOOL hasSname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;
/** Test to see if @c avatar has been set. */
@property(nonatomic, readwrite) BOOL hasAvatar;

/** 身份 */
@property(nonatomic, readwrite) int32_t role;

@property(nonatomic, readwrite) BOOL hasRole;
/** 所在公司 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *company;
/** Test to see if @c company has been set. */
@property(nonatomic, readwrite) BOOL hasCompany;

/** 职位 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *companyJob;
/** Test to see if @c companyJob has been set. */
@property(nonatomic, readwrite) BOOL hasCompanyJob;

@end

#pragma mark - IMMessage

typedef GPB_ENUM(IMMessage_FieldNumber) {
  IMMessage_FieldNumber_Type = 1,
  IMMessage_FieldNumber_MessageId = 2,
  IMMessage_FieldNumber_FromUser = 3,
  IMMessage_FieldNumber_Text = 4,
  IMMessage_FieldNumber_Image = 5,
  IMMessage_FieldNumber_Audio = 6,
  IMMessage_FieldNumber_IsQuestion = 7,
  IMMessage_FieldNumber_Timestamp = 8,
  IMMessage_FieldNumber_MeetingId = 9,
  IMMessage_FieldNumber_Uuid = 10,
};

/**
 * 普通im消息
 **/
@interface IMMessage : GPBMessage

@property(nonatomic, readwrite) IMMessageType type;

@property(nonatomic, readwrite) BOOL hasType;
@property(nonatomic, readwrite) int64_t messageId;

@property(nonatomic, readwrite) BOOL hasMessageId;
@property(nonatomic, readwrite, strong, null_resettable) User *fromUser;
/** Test to see if @c fromUser has been set. */
@property(nonatomic, readwrite) BOOL hasFromUser;

@property(nonatomic, readwrite, strong, null_resettable) TextMeta *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

@property(nonatomic, readwrite, strong, null_resettable) ImageMeta *image;
/** Test to see if @c image has been set. */
@property(nonatomic, readwrite) BOOL hasImage;

@property(nonatomic, readwrite, strong, null_resettable) AudioMeta *audio;
/** Test to see if @c audio has been set. */
@property(nonatomic, readwrite) BOOL hasAudio;

@property(nonatomic, readwrite) BOOL isQuestion;

@property(nonatomic, readwrite) BOOL hasIsQuestion;
@property(nonatomic, readwrite) int32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite) BOOL hasMeetingId;
@property(nonatomic, readwrite, copy, null_resettable) NSString *uuid;
/** Test to see if @c uuid has been set. */
@property(nonatomic, readwrite) BOOL hasUuid;

@end

#pragma mark - PlainTextMessage

typedef GPB_ENUM(PlainTextMessage_FieldNumber) {
  PlainTextMessage_FieldNumber_Text = 1,
  PlainTextMessage_FieldNumber_RelationMessageId = 2,
  PlainTextMessage_FieldNumber_Timestamp = 3,
  PlainTextMessage_FieldNumber_MeetingId = 4,
};

/**
 * 音频转换成文本后，推送的文本消息
 **/
@interface PlainTextMessage : GPBMessage

/** 具体文字内容 */
@property(nonatomic, readwrite, strong, null_resettable) TextMeta *text;
/** Test to see if @c text has been set. */
@property(nonatomic, readwrite) BOOL hasText;

/** 关联的消息id */
@property(nonatomic, readwrite) int32_t relationMessageId;

@property(nonatomic, readwrite) BOOL hasRelationMessageId;
@property(nonatomic, readwrite) int32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite) BOOL hasMeetingId;
@end

#pragma mark - StatusMessage

typedef GPB_ENUM(StatusMessage_FieldNumber) {
  StatusMessage_FieldNumber_User = 1,
  StatusMessage_FieldNumber_MeetingId = 2,
  StatusMessage_FieldNumber_Status = 3,
  StatusMessage_FieldNumber_OnlineCount = 4,
};

@interface StatusMessage : GPBMessage

/** 用户 */
@property(nonatomic, readwrite, strong, null_resettable) User *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 所在的会议 */
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite) BOOL hasMeetingId;
/** 0:offline 1:online */
@property(nonatomic, readwrite) int32_t status;

@property(nonatomic, readwrite) BOOL hasStatus;
/** 当前在线总人数 */
@property(nonatomic, readwrite) int32_t onlineCount;

@property(nonatomic, readwrite) BOOL hasOnlineCount;
@end

#pragma mark - RoleChangeMessage

typedef GPB_ENUM(RoleChangeMessage_FieldNumber) {
  RoleChangeMessage_FieldNumber_User = 1,
  RoleChangeMessage_FieldNumber_MeetingId = 2,
};

@interface RoleChangeMessage : GPBMessage

/** 用户 */
@property(nonatomic, readwrite, strong, null_resettable) User *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 所在的会议 */
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite) BOOL hasMeetingId;
@end

#pragma mark - QuitMessage

typedef GPB_ENUM(QuitMessage_FieldNumber) {
  QuitMessage_FieldNumber_User = 1,
  QuitMessage_FieldNumber_MeetingId = 2,
  QuitMessage_FieldNumber_Type = 3,
  QuitMessage_FieldNumber_Reason = 4,
};

@interface QuitMessage : GPBMessage

/** 退出的用户id */
@property(nonatomic, readwrite, strong, null_resettable) User *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 退出的会议 */
@property(nonatomic, readwrite) int32_t meetingId;

@property(nonatomic, readwrite) BOOL hasMeetingId;
/** 原因类型 1: 用户主动退出， 2：用户进入其它会议被t掉 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
/** 退出原因 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *reason;
/** Test to see if @c reason has been set. */
@property(nonatomic, readwrite) BOOL hasReason;

@end

#pragma mark - RollNewsMessage

typedef GPB_ENUM(RollNewsMessage_FieldNumber) {
  RollNewsMessage_FieldNumber_Id_p = 1,
  RollNewsMessage_FieldNumber_Timestamp = 2,
  RollNewsMessage_FieldNumber_Content = 3,
  RollNewsMessage_FieldNumber_Type = 4,
};

@interface RollNewsMessage : GPBMessage

/** 最新快讯的id */
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
/** 最新快讯的时间 */
@property(nonatomic, readwrite) int32_t timestamp;

@property(nonatomic, readwrite) BOOL hasTimestamp;
/** 消息内容 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

/** 1.快讯, 2.重要消息 */
@property(nonatomic, readwrite) int32_t type;

@property(nonatomic, readwrite) BOOL hasType;
@end

#pragma mark - PushExtra

typedef GPB_ENUM(PushExtra_FieldNumber) {
  PushExtra_FieldNumber_PushType = 1,
  PushExtra_FieldNumber_Jump = 2,
};

@interface PushExtra : GPBMessage

/** 2:系统消息，3:评论提醒 pc端用 */
@property(nonatomic, readwrite) int32_t pushType;

@property(nonatomic, readwrite) BOOL hasPushType;
/** na跳转schema */
@property(nonatomic, readwrite, copy, null_resettable) NSString *jump;
/** Test to see if @c jump has been set. */
@property(nonatomic, readwrite) BOOL hasJump;

@end

#pragma mark - PushMessage

typedef GPB_ENUM(PushMessage_FieldNumber) {
  PushMessage_FieldNumber_Title = 1,
  PushMessage_FieldNumber_Content = 2,
  PushMessage_FieldNumber_Extra = 3,
};

@interface PushMessage : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *title;
/** Test to see if @c title has been set. */
@property(nonatomic, readwrite) BOOL hasTitle;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;
/** Test to see if @c content has been set. */
@property(nonatomic, readwrite) BOOL hasContent;

@property(nonatomic, readwrite, strong, null_resettable) PushExtra *extra;
/** Test to see if @c extra has been set. */
@property(nonatomic, readwrite) BOOL hasExtra;

@end

#pragma mark - NotifyMessage

typedef GPB_ENUM(NotifyMessage_FieldNumber) {
  NotifyMessage_FieldNumber_ChannelType = 1,
  NotifyMessage_FieldNumber_Data_p = 2,
};

@interface NotifyMessage : GPBMessage

@property(nonatomic, readwrite) ChannelType channelType;

@property(nonatomic, readwrite) BOOL hasChannelType;
/**
 * optional IMMessage im_message = 3;//channeltype=1,2时，对应这个message
 * optional PlainTextMessage plaintext_message = 4;//3时，对应这个message
 * optional StatusMessage status_message = 5; //channeltype=4, 对应这个message
 * optional RoleChangeMessage role_change_message = 6; //channeltype=5
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSData *data_p;
/** Test to see if @c data_p has been set. */
@property(nonatomic, readwrite) BOOL hasData_p;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
